// Auto-generated by SaveCodeGenerator
namespace App.SaveLoad.Entities.ComponentSerializers
{
    using System;
    using UnityEngine;
    using System.Collections.Generic;

    public static class ComponentSerializersRegistry
    {
        private static Dictionary<Type, ComponentSerializer> _map = new Dictionary<Type, ComponentSerializer>();

        static ComponentSerializersRegistry()
        {
            
            _map[typeof(Game.Scripts.Gameplay.Components.Health)] = new ComponentSerializer
            {
                DtoType = typeof(App.SaveLoad.Entities.ComponentSerializers.HealthDto),
                Serialize = (mono) => App.SaveLoad.Entities.ComponentSerializers.HealthSerializer.Serialize((Game.Scripts.Gameplay.Components.Health)mono),
                Deserialize = (mono, dto) => App.SaveLoad.Entities.ComponentSerializers.HealthSerializer.Deserialize((Game.Scripts.Gameplay.Components.Health)mono, (App.SaveLoad.Entities.ComponentSerializers.HealthDto)dto)
            };
            
            _map[typeof(SampleGame.Gameplay.ProductionOrder)] = new ComponentSerializer
            {
                DtoType = typeof(App.SaveLoad.Entities.ComponentSerializers.ProductionOrderDto),
                Serialize = (mono) => App.SaveLoad.Entities.ComponentSerializers.ProductionOrderSerializer.Serialize((SampleGame.Gameplay.ProductionOrder)mono),
                Deserialize = (mono, dto) => App.SaveLoad.Entities.ComponentSerializers.ProductionOrderSerializer.Deserialize((SampleGame.Gameplay.ProductionOrder)mono, (App.SaveLoad.Entities.ComponentSerializers.ProductionOrderDto)dto)
            };
            
            _map[typeof(SampleGame.Gameplay.TargetObject)] = new ComponentSerializer
            {
                DtoType = typeof(App.SaveLoad.Entities.ComponentSerializers.TargetObjectDto),
                Serialize = (mono) => App.SaveLoad.Entities.ComponentSerializers.TargetObjectSerializer.Serialize((SampleGame.Gameplay.TargetObject)mono),
                Deserialize = (mono, dto) => App.SaveLoad.Entities.ComponentSerializers.TargetObjectSerializer.Deserialize((SampleGame.Gameplay.TargetObject)mono, (App.SaveLoad.Entities.ComponentSerializers.TargetObjectDto)dto)
            };
            
            _map[typeof(SampleGame.Gameplay.Countdown)] = new ComponentSerializer
            {
                DtoType = typeof(App.SaveLoad.Entities.ComponentSerializers.CountdownDto),
                Serialize = (mono) => App.SaveLoad.Entities.ComponentSerializers.CountdownSerializer.Serialize((SampleGame.Gameplay.Countdown)mono),
                Deserialize = (mono, dto) => App.SaveLoad.Entities.ComponentSerializers.CountdownSerializer.Deserialize((SampleGame.Gameplay.Countdown)mono, (App.SaveLoad.Entities.ComponentSerializers.CountdownDto)dto)
            };
            
            _map[typeof(SampleGame.Gameplay.Team)] = new ComponentSerializer
            {
                DtoType = typeof(App.SaveLoad.Entities.ComponentSerializers.TeamDto),
                Serialize = (mono) => App.SaveLoad.Entities.ComponentSerializers.TeamSerializer.Serialize((SampleGame.Gameplay.Team)mono),
                Deserialize = (mono, dto) => App.SaveLoad.Entities.ComponentSerializers.TeamSerializer.Deserialize((SampleGame.Gameplay.Team)mono, (App.SaveLoad.Entities.ComponentSerializers.TeamDto)dto)
            };
            
            _map[typeof(SampleGame.Gameplay.DestinationPoint)] = new ComponentSerializer
            {
                DtoType = typeof(App.SaveLoad.Entities.ComponentSerializers.DestinationPointDto),
                Serialize = (mono) => App.SaveLoad.Entities.ComponentSerializers.DestinationPointSerializer.Serialize((SampleGame.Gameplay.DestinationPoint)mono),
                Deserialize = (mono, dto) => App.SaveLoad.Entities.ComponentSerializers.DestinationPointSerializer.Deserialize((SampleGame.Gameplay.DestinationPoint)mono, (App.SaveLoad.Entities.ComponentSerializers.DestinationPointDto)dto)
            };
            
            _map[typeof(SampleGame.Gameplay.ResourceBag)] = new ComponentSerializer
            {
                DtoType = typeof(App.SaveLoad.Entities.ComponentSerializers.ResourceBagDto),
                Serialize = (mono) => App.SaveLoad.Entities.ComponentSerializers.ResourceBagSerializer.Serialize((SampleGame.Gameplay.ResourceBag)mono),
                Deserialize = (mono, dto) => App.SaveLoad.Entities.ComponentSerializers.ResourceBagSerializer.Deserialize((SampleGame.Gameplay.ResourceBag)mono, (App.SaveLoad.Entities.ComponentSerializers.ResourceBagDto)dto)
            };
        }

        public static ComponentSerializer GetRecord(Type t)
        {
            _map.TryGetValue(t, out var rec);
            return rec;
        }

        public static ComponentSerializer GetRecord<T>(T component) where T : MonoBehaviour
        {
            _map.TryGetValue(component.GetType(), out var rec);
            return rec;
        }
    }

    public class ComponentSerializer
    {
        public Type DtoType;
        public Func<MonoBehaviour, object> Serialize;
        public Action<MonoBehaviour, object> Deserialize;
    }
}
