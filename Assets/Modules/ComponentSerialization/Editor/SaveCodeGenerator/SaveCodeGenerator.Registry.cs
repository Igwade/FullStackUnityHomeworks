#if UNITY_EDITOR

using System.Text;
using System.Collections.Generic;

namespace Modules.ComponentSerialization
{
    public static partial class SaveCodeGenerator
    {
        private static string GenerateComponentsRegistryFile(string ns, List<string> records)
        {
            var sb = new StringBuilder();
            sb.AppendLine("// Auto-generated by SaveCodeGenerator");
            sb.AppendLine($"namespace {ns}");
            sb.AppendLine("{");
            sb.AppendLine("    using System;");
            sb.AppendLine("    using UnityEngine;");
            sb.AppendLine("    using System.Collections.Generic;");
            sb.AppendLine();
            sb.AppendLine("    public static class ComponentSerializersRegistry");
            sb.AppendLine("    {");
            sb.AppendLine("        private static Dictionary<Type, ComponentSerializer> _map = new Dictionary<Type, ComponentSerializer>();");
            sb.AppendLine();
            sb.AppendLine("        static ComponentSerializersRegistry()");
            sb.AppendLine("        {");

            foreach (var r in records)
            {
                sb.AppendLine("            " + r);
            }

            sb.AppendLine("        }");
            sb.AppendLine();
            sb.AppendLine("        public static ComponentSerializer GetRecord(Type t)");
            sb.AppendLine("        {");
            sb.AppendLine("            _map.TryGetValue(t, out var rec);");
            sb.AppendLine("            return rec;");
            sb.AppendLine("        }");
            sb.AppendLine();
            sb.AppendLine("        public static ComponentSerializer GetRecord<T>(T component) where T : MonoBehaviour");
            sb.AppendLine("        {");
            sb.AppendLine("            _map.TryGetValue(component.GetType(), out var rec);");
            sb.AppendLine("            return rec;");
            sb.AppendLine("        }");
            sb.AppendLine("    }");
            sb.AppendLine();
            sb.AppendLine("    public class ComponentSerializer");
            sb.AppendLine("    {");
            sb.AppendLine("        public Type DtoType;");
            sb.AppendLine("        public Func<MonoBehaviour, object> Serialize;");
            sb.AppendLine("        public Action<MonoBehaviour, object> Deserialize;");
            sb.AppendLine("    }");
            sb.AppendLine("}");
            return sb.ToString();
        }
    }
}

#endif
